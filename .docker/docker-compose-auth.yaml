services:
  auth-db:
    restart: unless-stopped
    image: postgres:16
    container_name: auth-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - auth-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -p 5432 -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  auth:
    restart: unless-stopped
    image: quay.io/keycloak/keycloak:26.2
    container_name: auth
    command: [ "start" ]
    user: "1000:1000"
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_HOST: auth-db
      KC_DB_URL_PORT: "5432"

      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"

      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: "8080"

      KC_METRICS_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
      KC_HTTP_MANAGEMENT_PORT: "9000"

      KC_CACHE: ispn
      KC_CACHE_STACK: kubernetes
      JAVA_OPTS_APPEND: "-Djgroups.dns.query=keycloak"

      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: password
    ports:
      - "8080:8080"
      - "8443:8443"
      - "9000:9000"
    depends_on:
      - auth-db
    volumes:
      - keycloak-tmp:/tmp
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/health/ready" ]
      interval: 30s
      timeout: 5s
      retries: 10

volumes:
  auth-db:
  keycloak-tmp: